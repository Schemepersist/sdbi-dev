General:

Don't forget to prevent your backup systems from trying to backup raw
database files, unless perhaps if the backup systems use the
filesystem stack to create snapshots, in which case you can hope the
database recovery mechanism will do the right thing if it's being
modified while being backed up.


It is STRONGLY recommended that when you use the command line to
interact with databases or most anything else in development, that you
do it in an environment that captures a transcript.  But beware of
capturing sensitive passwords in transcripts.


Tests will in general depend on the environment variable
SDBI_[ database name ]_PASSWORD being defined.  For example, for
PostgreSQL when using bash:

export SDBI_POSTGRESQL_PASSWORD="[ DO-NOT-CAPTURE-THIS! ]"

Replace [ DO-NOT-CAPTURE-THIS! ] with your password.


--------

SQLite3:

https://sqlite.org/index.html

Should already be installed on your system, zero-admin to the point of
having an in memory database using ":memory:".


--------

PostgreSQL:

https://www.postgresql.org/

For names for Debian based distributions, check:

http://apt.postgresql.org/pub/repos/apt/dists/

For example, for Ubuntu 18.04 LTS Bionic Beaver, put this line in
/etc/apt/sources.list.d/pgdg.list:

deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main


The final release/update of version 11 is scheduled to be November 9, 2023.

Install the following packages for the wire protocol net connector:

postgresql-11  	          core database server

Which should also install postgresql-client-11, "client libraries and
client binaries", needed for command line configuration of databases.

The default Linux installation location for data files should be /var/lib/postgresql/

Note partitioning using stock PostgreSQL is very immature:
https://www.postgresql.org/docs/release/11.5/


To configure the PostgreSQL 11(.5) test database for use by testuser
on Ubuntu 18.04 Bionic Beaver, this was done in a Gnu Emacs shell
buffer, hence the --no-readline and \pset pager initial settings.

su
su postgres -
[ if in Emacs buffer, ignore I/O errors, ***and don't try to use job control*** ]
psql --no-readline
\pset pager
SELECT version(); [ A very simple test of connectivity. ]
CREATE DATABASE testdb TEMPLATE template0 ENCODING UTF8 LC_COLLATE 'C' LC_CTYPE 'C';
CREATE USER testuser password '[ DO-NOT-CAPTURE-THIS! ]';
GRANT ALL ON SCHEMA public TO testuser;
\q

psql --no-readline testdb
\pset pager
SELECT version();
\d [ Should reply "Did not find any relations." ]
