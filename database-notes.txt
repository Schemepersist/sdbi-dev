General:

Don't forget to prevent your backup systems from trying to backup raw
database files, unless perhaps if the backup systems use the
filesystem stack to create snapshots, in which case you can hope the
database recovery mechanism will do the right thing if it's being
modified while being backed up.


It is STRONGLY recommended that when you use the command line to
interact with databases or most anything else in development, that you
do it in an environment that captures a transcript.  But beware of
capturing sensitive passwords in transcripts.


Tests will in general depend on the environment variable
SDBI_[ database name ]_PASSWORD being defined.  For example, for
PostgreSQL when using bash:

export SDBI_POSTGRESQL_PASSWORD="[ DO-NOT-CAPTURE-THIS! ]"

Replace [ DO-NOT-CAPTURE-THIS! ] with your password.


--------

SQLite3:

https://sqlite.org/index.html

Should already be installed on your system, zero-admin to the point of
having an in memory database using ":memory:".


--------

PostgreSQL:

https://www.postgresql.org/

For names for Debian based distributions, check:

http://apt.postgresql.org/pub/repos/apt/dists/

For example, for Ubuntu 18.04 LTS Bionic Beaver, put this line in
/etc/apt/sources.list.d/pgdg.list:

deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main


The final release/update of version 11 is scheduled to be November 9, 2023.

Install the following packages for the wire protocol net connector:

postgresql-11  	          core database server

Which should also install postgresql-client-11, "client libraries and
client binaries", needed for command line configuration of databases.

The default Linux installation location for data files should be /var/lib/postgresql/

Note partitioning using stock PostgreSQL is very immature:
https://www.postgresql.org/docs/release/11.5/


To configure the PostgreSQL 11(.5) test database for use by testuser
on Ubuntu 18.04 Bionic Beaver, this was done in a Gnu Emacs shell
buffer, hence the --no-readline and \pset pager initial settings.

su
su postgres -
[ if in Emacs buffer, ignore I/O errors, ***and don't try to use job control*** ]
psql --no-readline
\pset pager
SELECT version(); [ A very simple test of connectivity. ]
CREATE DATABASE testdb TEMPLATE template0 ENCODING UTF8 LC_COLLATE 'C' LC_CTYPE 'C';
CREATE USER testuser password '[ DO-NOT-CAPTURE-THIS! ]';
GRANT ALL ON SCHEMA public TO testuser;
\q

psql --no-readline testdb
\pset pager
SELECT version();
\d [ Should reply "Did not find any relations." ]


Cassandra:

C/C++ driver: https://github.com/datastax/cpp-driver, click on top
link https://docs.datastax.com/en/developer/cpp-driver/latest and you
should get redirected to latest set of drivers.  For Bionic Beaver:

cassandra-cpp-driver_2.13.0-1_amd64.deb
cassandra-cpp-driver-dev_2.13.0-1_amd64.deb
cassandra-cpp-driver-dbg_2.13.0-1_amd64.deb

Manually install .deb files like "sudo dpkg -i  cassandra-cpp-driver*"

For that current version, documentation at:

https://docs.datastax.com/en/developer/cpp-driver/2.13/api/
https://docs.datastax.com/en/developer/cpp-driver/2.13/topics/


Database:

See this for how to install and check status afterwords:
http://cassandra.apache.org/doc/latest/getting_started/installing.html

For the JVM, I trust Azul Systems' free TCK checked Zulu distribution,
see https://www.azul.com/downloads/zulu-community/ They're also said
to cost a *lot* less than Oracle for better? tech support.  Amazon
also has a TCK checked distribution which I have no other knowledge
about, https://aws.amazon.com/corretto/.  Beware of any OpenJDK
distribution which is built by an entity that doesn't have a TCK
license to test it.  And of course bewere of Oracle licence games.

Note that on Bionic Beaver, stock Ubuntu ntp ntpd deamon does not
work; multiple systems Cassandra installations depend on accurate
time, should not matter for a single system for development.  Install
all the files like this:

sudo apt-get install cassandra libopts25 ntp sntp cassandra-tools ntp-doc

Then uninstall ntp:

sudo apt-get remove ntp

At the bottom of the above link, it says to use "nodetool status" to
verify that Cassandra is running, I got:

Datacenter: datacenter1
=======================
Status=Up/Down
|/ State=Normal/Leaving/Joining/Moving
--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack
UN  127.0.0.1  210.72 KiB  256          100.0%            3f3cXXXXXXXXXXXXXXXXXXXXXXXXXXXX6786  rack1

And:

The default location of configuration files is /etc/cassandra.
The default location of log and data directories is /var/log/cassandra/ and /var/lib/cassandra.

On installation those should only take up a few megabytes.

